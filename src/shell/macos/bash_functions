#!/bin/bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Change working directory to the top-most Finder window location

cdf() { # short for `cdfinder`
	cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')" || return;
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Switch Audio

function headset() {
	switchaudiosource -t input -s "External Headphones"
	switchaudiosource -t output -s "External Headphones"
}

function speakers() {
    switchaudiosource -t input -s "MacBook Pro Microphone"
    switchaudiosource -t output -s "MacBook Pro Speakers"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Toggle bluetooth devices

function bu () {
    device_name=$1
    declare device_mac_id

    if [[ $device_name = "trackpad" ]]
    then
        device_mac_id="f4-1b-a1-30-7d-87"
    elif [[ $device_name = "speakers" ]]
    then
        device_mac_id="00-11-67-c7-5e-78"
    elif [[ $device_name = "keyboard" ]]
    then
        device_mac_id="b8-f6-b1-0c-c2-1e"
    else
        echo "Unknown device: $device_name"
        return
    fi

    toggle_bt_device "$device_mac_id"
}

function toggle_bt_device() {
    mac_addr=$1

    if [[ $(blueutil --is-connected "$mac_addr") = '1' ]]
    then
        echo Disconnecting "$mac_addr"
        blueutil --unpair "$mac_addr"
    else
        echo Reconnecting "$mac_addr"
        blueutil --unpair "$mac_addr"
        sleep 1
        blueutil --pair "$mac_addr"
        sleep 1
        blueutil --connect "$mac_addr"
    fi
}


# Litra on alias
# Clean me up
function litra() {
    if [[ $1 = "on" && $2 = "--all" ]]
    then
        echo "Turning on all Litra Glow devices..."
        # Get serial numbers for all Litra Glow devices using JSON output
        device_serials=$(litra devices --json | jq -r '.[] | select(.device_type == "Litra Glow") | .serial_number')

        if [[ -z "$device_serials" ]]; then
            echo "No Litra Glow devices found"
            return
        fi

        for device_serial in $device_serials
        do
            echo "Turning on device with serial: $device_serial"
            "$(brew --prefix)/bin/litra" on -s "$device_serial"
        done
    elif [[ $1 = "off" && $2 = "--all" ]]
    then
        echo "Turning off all Litra Glow devices..."
        # Get serial numbers for all Litra Glow devices using JSON output
        device_serials=$(litra devices --json | jq -r '.[] | select(.device_type == "Litra Glow") | .serial_number')

        if [[ -z "$device_serials" ]]; then
            echo "No Litra Glow devices found"
            return
        fi

        for device_serial in $device_serials
        do
            echo "Turning off device with serial: $device_serial"
            "$(brew --prefix)/bin/litra" off -s "$device_serial"
        done
    else
        "$(brew --prefix)/bin/litra" "$@"
    fi
}
